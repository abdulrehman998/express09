{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["onSubmitFunction","values","console","log","obj","name","email","password","axios","post","then","response","data","catch","error","validationSchema","yup","required","min","max","App","formik","useFormik","initialValues","onSubmit","style","padding","handleSubmit","Stack","spacing","TextField","fullWidth","color","id","label","variant","value","onChange","handleChange","touched","website","Boolean","errors","helperText","type","Button","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQASA,SAASA,EAAiBC,GACxBC,QAAQC,IAAI,WAAYF,GAExB,IAAMG,EAAM,CACVC,KAAMJ,EAAOI,KACbC,MAAOL,EAAOK,MACdC,SAAUN,EAAOM,UAErBL,QAAQC,IAAIC,GAEZI,IAAMC,KAAN,uCAAmDL,GAC1CM,MAAK,SAACC,GACHT,QAAQC,IAAIQ,EAASC,SACtBC,OAAM,SAACC,GACNZ,QAAQC,IAAIW,MAIxB,IAAMC,EAAmBC,IAAW,CAClCV,MAAOU,IACG,oBACPV,MAAM,uBACNW,SAAS,qBACZV,SAAUS,IACA,uBACPE,IAAI,EAAG,qDACPC,IAAI,GAAI,mBACRF,SAAS,wBACZZ,KAAMW,IACI,mBACPC,SAAS,sBA4ECG,MAxEf,WAEE,IAAMC,EAASC,YAAU,CACvBP,iBAAkBA,EAClBQ,cAAe,CACblB,KAAM,GACNC,MAAO,GACPC,SAAU,IAEZiB,SAAUxB,IAIZ,OACE,qBAAKyB,MAAO,CAAEC,QAAS,QAAvB,SAEE,sBAAMF,SAAUH,EAAOM,aAAvB,SACE,eAACC,EAAA,EAAD,CAAOC,QAAS,EAAhB,UACE,cAACC,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,GAAG,iBACHC,MAAM,OACNC,QAAQ,WAER9B,KAAK,OACL+B,MAAOf,EAAOpB,OAAOI,KACrBgC,SAAUhB,EAAOiB,aAEjBxB,MAAOO,EAAOkB,QAAQC,SAAWC,QAAQpB,EAAOqB,OAAOrC,MACvDsC,WAAYtB,EAAOkB,QAAQC,SAAWnB,EAAOqB,OAAOrC,OAGtD,cAACyB,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WAER9B,KAAK,QACL+B,MAAOf,EAAOpB,OAAOK,MACrB+B,SAAUhB,EAAOiB,aAEjBxB,MAAOO,EAAOkB,QAAQjC,OAASmC,QAAQpB,EAAOqB,OAAOpC,OACrDqC,WAAYtB,EAAOkB,QAAQjC,OAASe,EAAOqB,OAAOpC,QAGpD,cAACwB,EAAA,EAAD,CACEC,WAAS,EACTC,MAAM,UACNC,GAAG,eACHC,MAAM,WACNC,QAAQ,WACRS,KAAK,WAELvC,KAAK,WACL+B,MAAOf,EAAOpB,OAAOM,SACrB8B,SAAUhB,EAAOiB,aAEjBxB,MAAOO,EAAOkB,QAAQhC,UAAYkC,QAAQpB,EAAOqB,OAAOnC,UACxDoC,WAAYtB,EAAOkB,QAAQhC,UAAYc,EAAOqB,OAAOnC,WAGvD,cAACsC,EAAA,EAAD,CAAQd,WAAS,EAACI,QAAQ,YAAYH,MAAM,UAAUY,KAAK,SAA3D,4BC/FKE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dcd0ae79.chunk.js","sourcesContent":["import './App.css';\nimport { Formik, Field, Form, useFormik } from \"formik\";\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport * as yup from 'yup';\nimport axios from \"axios\";\n\n\nfunction onSubmitFunction(values) {\n  console.log(\"values: \", values)\n\n  const obj = {\n    name: values.name,\n    email: values.email,\n    password: values.password\n}\nconsole.log(obj)\n\naxios.post(`http://localhost:5000/api/v1/profile`, obj)\n        .then((response) => {\n            console.log(response.data);\n        }).catch((error) => {\n            console.log(error);\n        })\n}\n\nconst validationSchema = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'Password should be of minimum 8 characters length')\n    .max(10, 'No more then 10')\n    .required('Password is required'),\n  name: yup\n    .string('Enter your Name')\n    .required('Name is required'),\n});\n\n\nfunction App() {\n\n  const formik = useFormik({\n    validationSchema: validationSchema,\n    initialValues: {\n      name: '',\n      email: '',\n      password: '',\n    },\n    onSubmit: onSubmitFunction\n  });\n\n\n  return (\n    <div style={{ padding: \"1rem\" }}>\n\n      <form onSubmit={formik.handleSubmit}>\n        <Stack spacing={2}>\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"outlined-basic\"\n            label=\"Name\"\n            variant=\"outlined\"\n\n            name=\"name\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n\n            error={formik.touched.website && Boolean(formik.errors.name)}\n            helperText={formik.touched.website && formik.errors.name}\n          />\n\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"outlined-basic\"\n            label=\"Email\"\n            variant=\"outlined\"\n\n            name=\"email\"\n            value={formik.values.email}\n            onChange={formik.handleChange}\n\n            error={formik.touched.email && Boolean(formik.errors.email)}\n            helperText={formik.touched.email && formik.errors.email}\n          />\n\n          <TextField\n            fullWidth\n            color=\"primary\"\n            id=\"filled-basic\"\n            label=\"Password\"\n            variant=\"outlined\"\n            type=\"password\"\n\n            name=\"password\"\n            value={formik.values.password}\n            onChange={formik.handleChange}\n\n            error={formik.touched.password && Boolean(formik.errors.password)}\n            helperText={formik.touched.password && formik.errors.password}\n          />\n\n          <Button fullWidth variant=\"contained\" color=\"primary\" type=\"submit\">Button</Button>\n        </Stack>\n\n      </form>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}